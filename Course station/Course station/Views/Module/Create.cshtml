@model Course_station.Models.Module

@{
    ViewData["Title"] = "Create Module";
}

<h2>Create Module</h2>

<form asp-action="Create" method="post">
    @Html.AntiForgeryToken()

    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="form-group">
        <label asp-for="Title" class="control-label"></label>
        <input asp-for="Title" class="form-control" />
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="DifficultyLevel" class="control-label"></label>
        <input asp-for="DifficultyLevel" class="form-control" />
        <span asp-validation-for="DifficultyLevel" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="ContentUrl" class="control-label"></label>
        <input asp-for="ContentUrl" class="form-control" />
        <span asp-validation-for="ContentUrl" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="CourseId" class="control-label"></label>
        <select asp-for="CourseId" asp-items="ViewBag.Courses" class="form-control"></select>
        <span asp-validation-for="CourseId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary" />
    </div>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
